name: CI

on:
  push:
    branches:
      - main
  pull_request:

# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  # group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  # echo:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ${{ tojson(github) }}
  #       shell: cat {0}
  check:
    runs-on: ubuntu-latest
    steps:
      # Get the maximum node version from vars.NODE_MATRIX, which is a JSON array string
      - uses: actions/checkout@v4
      - id: max-node-version
        run: echo "version=$(echo '${{ vars.NODE_MATRIX }}' | jq -r '.[] | tostring' | sort -r | head -n 1)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.max-node-version.outputs.version }}
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run check
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(vars.NODE_MATRIX) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - run: npm run build
      - run: npm run test
  codeql:
    uses: ./.github/workflows/codeql.yml
    secrets: inherit
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read
  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: max-node-version
        run: echo "version=$(echo '${{ vars.NODE_MATRIX }}' | jq -r '. | max')" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.max-node-version.outputs.version }}
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - run: npm run build
      - run: npm run coverage
      - uses: sonarsource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
